name: Debug macOS Build

on:
  workflow_dispatch:
  push:
    tags:
      - 'debug-v*'

jobs:
  debug-build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: "Step 1: 환경 정보 수집"
      run: |
        echo "=== 운영체제 정보 ==="
        uname -a
        echo "=== Python 정보 ==="
        which python3
        python3 --version
        echo "=== 디렉토리 구조 ==="
        ls -la
        echo "=== src 디렉토리 ==="
        ls -la src/ || echo "src 없음"

    - name: "Step 2: 필수 파일 확인"
      run: |
        echo "=== 필수 파일 체크 ==="
        echo "gui_perfect.py:" $(ls gui_perfect.py 2>/dev/null && echo "존재" || echo "없음")
        echo "main.py:" $(ls main.py 2>/dev/null && echo "존재" || echo "없음")
        echo ".env:" $(ls .env 2>/dev/null && echo "존재" || echo "없음")
        echo "requirements.txt:" $(ls requirements.txt 2>/dev/null && echo "존재" || echo "없음")

        if [[ -f gui_perfect.py ]]; then
          echo "=== gui_perfect.py 첫 10줄 ==="
          head -10 gui_perfect.py
        fi

    - name: "Step 3: Python 설정"
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: "Step 4: 기본 패키지만 설치"
      run: |
        echo "=== pip 업그레이드 ==="
        python3 -m pip install --upgrade pip
        echo "=== 기본 패키지 설치 ==="
        pip install PyQt6
        echo "=== 설치 확인 ==="
        python3 -c "import PyQt6; print('PyQt6 import 성공')"

    - name: "Step 5: 최소한 앱 번들 구조 생성"
      run: |
        echo "=== 앱 번들 디렉토리 생성 ==="
        APP_NAME="CARRY Route Optimizer.app"
        mkdir -p "$APP_NAME/Contents/MacOS"
        mkdir -p "$APP_NAME/Contents/Resources"

        echo "=== Info.plist 생성 ==="
        cat > "$APP_NAME/Contents/Info.plist" << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>launcher</string>
            <key>CFBundleIdentifier</key>
            <string>com.carry.routeoptimizer</string>
            <key>CFBundleName</key>
            <string>CARRY Route Optimizer</string>
            <key>CFBundleVersion</key>
            <string>1.0.0</string>
        </dict>
        </plist>
        EOF

        echo "=== 런처 스크립트 생성 ==="
        cat > "$APP_NAME/Contents/MacOS/launcher" << 'EOF'
        #!/bin/bash
        cd "$(dirname "$0")/../Resources"
        export PYTHONPATH="$PWD:$PYTHONPATH"
        /usr/bin/python3 gui_perfect.py "$@"
        EOF

        chmod +x "$APP_NAME/Contents/MacOS/launcher"

        echo "=== 필수 파일 복사 ==="
        cp gui_perfect.py "$APP_NAME/Contents/Resources/" || echo "gui_perfect.py 복사 실패"
        cp main.py "$APP_NAME/Contents/Resources/" || echo "main.py 복사 실패"
        cp .env "$APP_NAME/Contents/Resources/" || echo ".env 복사 실패"
        cp -r src "$APP_NAME/Contents/Resources/" || echo "src 복사 실패"

        echo "=== 앱 번들 구조 확인 ==="
        find "$APP_NAME" -type f

    - name: "Step 6: PKG 생성 시도"
      run: |
        echo "=== PKG 생성 ==="
        APP_NAME="CARRY Route Optimizer.app"

        if [[ -d "$APP_NAME" ]]; then
          mkdir -p pkg_root/Applications
          cp -R "$APP_NAME" pkg_root/Applications/

          echo "=== pkgbuild 실행 ==="
          pkgbuild \
            --root pkg_root \
            --identifier com.carry.routeoptimizer.debug \
            --version 1.0.0 \
            --install-location / \
            "CARRY-Route-Optimizer-Debug.pkg" || echo "pkgbuild 실패"

          if [[ -f "CARRY-Route-Optimizer-Debug.pkg" ]]; then
            echo "✅ PKG 생성 성공!"
            ls -la *.pkg
          else
            echo "❌ PKG 생성 실패"
          fi
        else
          echo "❌ 앱 번들이 없어서 PKG 생성 불가"
        fi

    - name: "Step 7: 결과 업로드"
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: debug-build-results
        path: |
          *.pkg
          CARRY Route Optimizer.app
        if-no-files-found: ignore